@page
@model FlightFinder.Pages.UserModel
@{
    ViewData["Title"] = "User";
}

<head>
    <link rel="stylesheet" type="text/css" href="~/css/table.css">
    <link rel="stylesheet" type="text/css" href="~/css/user.css">
    <link rel="stylesheet" type="text/css" href="~/css/notification.css">
</head>

<form id="confirm" method="post">
    <div>
        <button class="btn btn-success" name="submit" type="submit" value="U">User Settings</button>
    </div>
</form>
<br />
<form id="confirm" method="post">
    <div>
        <button class="btn btn-danger" name="submit" type="submit" value="L">Log Out</button>
    </div>
</form>

<body>
    <br />
    <div class="text-center">
        <label>
            <b style="font-size:30px">User Info</b>
        </label>
    </div>
    <table class="flight-list-table">
        <thead class="thead-user">
            <tr>
                <th scope="col">User Email</th>
                <th scope="col">Username</th>
                <th scope="col">Password</th>
                <th scope="col">Account Creation Date</th>
                <th scope="col">Notification Setting</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@Html.DisplayFor(m => Model.User_Email[0])</td>
                <td>@Html.DisplayFor(m => Model.User_Username[0])</td>
                <td>@Html.DisplayFor(m => Model.User_Password[0])</td>
                <td>@Html.DisplayFor(m => Model.Account_Creation_Date[0])</td>
                <td>@Html.DisplayFor(m => Model.Notif_Setting[0])</td>
            </tr>
        </tbody>
    </table>

    <br /><br />

    <div class="text-center">
        <label>
            <b style="font-size:30px">Booked Flights</b>
        </label>
    </div>
    <table class="flight-list-table">
        <thead class="thead-booked">
            <tr>
                <th scope="col">Departure City</th>
                <th scope="col">&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp</th>
                <th scope="col">Arrival City</th>
                <th scope="col">Flight Date</th>
                <th scope="col">Departure Time</th>
                <th scope="col">Arrival Time</th>
                <th scope="col">Estimated Flight Time</th>
                <th scope="col">Airline Name</th>
                <th scope="col">Registration Number</th>
                <th scope="col">Aircraft Type</th>
                <th scope="col">Flight Distance</th>
                <th scope="col">Total Seats</th>
                <th scope="col">Open Seats</th>
                <th scope="col">Unbook Flight</th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < @Model.B_TableSize; ++i) {
                <tr>
                    <td scope="row"><div class="departure-city-table">@Html.DisplayFor(m => m.B_Departure_Airport[i])</div>@Html.DisplayFor(m => m.B_Departure_City[i])</td>
                    <td><img class="go-to" src="~/css/images/arrow.png" /> </td>
                    <td><div class="arrival-city-table">@Html.DisplayFor(m => m.B_Arrival_Airport[i])</div>@Html.DisplayFor(m => m.B_Arrival_City[i])</td>
                    <td>@Html.DisplayFor(m => m.B_Flight_Date[i])</td>
                    <td><div class="arrival-departure-time-table">@Html.DisplayFor(m => m.B_Departure_Time[i])</div></td>
                    <td><div class="arrival-departure-time-table">@Html.DisplayFor(m => m.B_Arrival_Time[i])</div></td>
                    <td>@Html.DisplayFor(m => m.B_E_Flight_Time[i])</td>
                    <td>@Html.DisplayFor(m => m.B_Airline_Name[i])</td>
                    <td>@Html.DisplayFor(m => m.B_Aircraft_Reg_Num[i])</td>
                    <td>@Html.DisplayFor(m => m.B_Aircraft_Type[i])</td>
                    <td>@Html.DisplayFor(m => m.B_Flight_Distance[i])</td>
                    <td>@Html.DisplayFor(m => m.B_Total_Seats[i])</td>
                    <td>@Html.DisplayFor(m => m.B_Open_Seats[i])</td>
                    <td>
                        <form id="save-flight" method="post">
                            <button class="btn btn-info" name="submit" type="submit" value="B$@Model.B_Flight_ID[i]" onclick="Notification.show(@Model.ConfigureNotification("Save"))">Unbook</button>
                        </form>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <br /><br />

    <div class="text-center">
        <label>
            <b style="font-size:30px">Saved Flights</b>
        </label>
    </div>
    <table class="flight-list-table">
        <thead class="thead-saved">
            <tr>
                <th scope="col">Departure City</th>
                <th scope="col">&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp</th>
                <th scope="col">Arrival City</th>
                <th scope="col">Flight Date</th>
                <th scope="col">Departure Time</th>
                <th scope="col">Arrival Time</th>
                <th scope="col">Estimated Flight Time</th>
                <th scope="col">Airline Name</th>
                <th scope="col">Registration Number</th>
                <th scope="col">Aircraft Type</th>
                <th scope="col">Flight Distance</th>
                <th scope="col">Total Seats</th>
                <th scope="col">Open Seats</th>
                <th scope="col">Unsave Flight</th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < @Model.TableSize; ++i) {
                <tr>
                    <td scope="row"><div class="departure-city-table">@Html.DisplayFor(m => m.Departure_Airport[i])</div>@Html.DisplayFor(m => m.Departure_City[i])</td>
                    <td><img class="go-to" src="~/css/images/arrow.png" /> </td>
                    <td><div class="arrival-city-table">@Html.DisplayFor(m => m.Arrival_Airport[i])</div>@Html.DisplayFor(m => m.Arrival_City[i])</td>
                    <td>@Html.DisplayFor(m => m.Flight_Date[i])</td>
                    <td><div class="arrival-departure-time-table">@Html.DisplayFor(m => m.Departure_Time[i])</div></td>
                    <td><div class="arrival-departure-time-table">@Html.DisplayFor(m => m.Arrival_Time[i])</div></td>
                    <td>@Html.DisplayFor(m => m.E_Flight_Time[i])</td>
                    <td>@Html.DisplayFor(m => m.Airline_Name[i])</td>
                    <td>@Html.DisplayFor(m => m.Aircraft_Reg_Num[i])</td>
                    <td>@Html.DisplayFor(m => m.Aircraft_Type[i])</td>
                    <td>@Html.DisplayFor(m => m.Flight_Distance[i])</td>
                    <td>@Html.DisplayFor(m => m.Total_Seats[i])</td>
                    <td>@Html.DisplayFor(m => m.Open_Seats[i])</td>
                    <td>
                        <form id="save-flight" method="post">
                            <button class="btn btn-info" name="submit" type="submit" value="S$@Model.Flight_ID[i]" onclick="Notification.show(@Model.ConfigureNotification("Save"))">Unsave</button>
                        </form>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <script>
        const Notification = {
            init() {
                this.hideTimeout = null;

                this.el = document.createElement('div');
                this.el.className = 'notification';
                document.body.appendChild(this.el);
            },

            show(message, state) {
                clearTimeout(this.hideTimeout);

                this.el.textContent = message;
                this.el.className = 'notification notification--visible';

                if (state) {
                    this.el.classList.add(`notification--${state}`)
                }

                this.hideTimeout = setTimeout(() => {
                    this.el.classList.remove('notification--visible');
                }, 3000);
            }
        };

        document.addEventListener('DOMContentLoaded', () => Notification.init());
    </script>
    <script>
        document.addEventListener("DOMContentLoaded", function (event) {
            var scrollpos = localStorage.getItem('scrollpos');
            if (scrollpos) window.scrollTo(0, scrollpos);
        });

        window.onbeforeunload = function (e) {
            localStorage.setItem('scrollpos', window.scrollY);
        };
    </script>

</body>